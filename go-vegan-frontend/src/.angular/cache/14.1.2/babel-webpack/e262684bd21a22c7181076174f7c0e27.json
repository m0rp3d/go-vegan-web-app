{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/account.service\";\nimport * as i2 from \"../../services/login.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\n\nfunction TempComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 0)(1, \"td\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\");\n    i0.ɵɵelementStart(4, \"td\", 1);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 1);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\", 3);\n    i0.ɵɵtext(9, \"View Order Items\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tempOrder_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempOrder_r1.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(tempOrder_r1.totalQuantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempOrder_r1.totalPrice);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/orderDetails/\", tempOrder_r1.id, \"\");\n  }\n}\n\nexport class TempComponent {\n  constructor(accountService, loginService) {\n    this.accountService = accountService;\n    this.loginService = loginService;\n    this.accId = 1;\n  }\n\n  ngOnInit() {\n    this.getAccountDataById().subscribe(() => {});\n  }\n  /*\r\n  ngOnInit(): void {\r\n    this.getAccountDataById().subscribe(() => {\r\n      this.getOrderDataByAccountId();\r\n    });\r\n  }\r\n  */\n\n\n  getAccountDataById() {\n    // for asynchronous execution of functions\n    return new Observable(observer => {\n      // for testing, id will always be 1\n      // will alter for dynamic id\n      const id = 1;\n      this.accountService.getAccountById(id).subscribe(data => {\n        this.account = data;\n        observer.next();\n      });\n    });\n  }\n\n}\n\nTempComponent.ɵfac = function TempComponent_Factory(t) {\n  return new (t || TempComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.LoginService));\n};\n\nTempComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TempComponent,\n  selectors: [[\"app-temp\"]],\n  decls: 22,\n  vars: 4,\n  consts: [[\"width\", \"50%\"], [\"width\", \"12.5%\"], [\"width\", \"50%\", 4, \"ngFor\", \"ngForOf\"], [\"width\", \"12.5%\", 3, \"routerLink\"]],\n  template: function TempComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\")(3, \"li\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"li\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"li\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"p\");\n      i0.ɵɵelementStart(10, \"table\")(11, \"thead\")(12, \"tr\", 0)(13, \"th\", 1);\n      i0.ɵɵtext(14, \"Order Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 1);\n      i0.ɵɵtext(16, \"Total Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\", 1);\n      i0.ɵɵtext(18, \"Total Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"th\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"tbody\");\n      i0.ɵɵtemplate(21, TempComponent_tr_21_Template, 10, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.account.firstName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.account.lastName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.account.email);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW1wLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,UAAT,QAA2B,MAA3B;;;;;;;;;ICmBIC,8BAAiD,CAAjD,EAAiD,IAAjD,EAAiD,CAAjD;IAEoBA;IAAlBA;IAAkCA;IAClCA;IAAkBA;IAA2BA;IAC7CA;IAAkBA;IAAwBA;IAC1CA;IAA8DA;IAAgBA;;;;;IAH5DA;IAAAA;IACAA;IAAAA;IACAA;IAAAA;IACdA;IAAAA;;;;ADbV,OAAM,MAAOC,aAAP,CAAoB;EAQxBC,YAAoBC,cAApB,EAA4DC,YAA5D,EAAsF;IAAlE;IAAwC;IAF5D,aAAgB,CAAhB;EAE2F;;EAE3FC,QAAQ;IAEN,KAAKC,kBAAL,GAA0BC,SAA1B,CAAoC,MAAK,CAExC,CAFD;EAGD;EAGD;;;;;;;;;EAUAD,kBAAkB;IAEhB;IACA,OAAO,IAAIP,UAAJ,CAAeS,QAAQ,IAAG;MAGjC;MACA;MACA,MAAMC,EAAE,GAAW,CAAnB;MAEA,KAAKN,cAAL,CAAoBO,cAApB,CAAmCD,EAAnC,EAAuCF,SAAvC,CACEI,IAAI,IAAG;QACL,KAAKC,OAAL,GAAeD,IAAf;QACAH,QAAQ,CAACK,IAAT;MACD,CAJH;IAOC,CAdM,CAAP;EAeD;;AA9CuB;;;mBAAbZ,eAAaD;AAAA;;;QAAbC;EAAaa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ1BlB;MAAIA;MAAOA;MAEXA,2BAAI,CAAJ,EAAI,IAAJ;MACMA;MAAqBA;MACzBA;MAAIA;MAAoBA;MACxBA;MAAIA;MAAiBA;MAIvBA;MACAA,+BAAO,EAAP,EAAO,OAAP,EAAO,EAAP,EAAO,IAAP,EAAO,CAAP,EAAO,EAAP,EAAO,IAAP,EAAO,CAAP;MAGwBA;MAAYA;MAC9BA;MAAkBA;MAAcA;MAChCA;MAAkBA;MAAWA;MAC7BA;MACFA;MAEFA;MACEA;MAQFA;;;;MAzBIA;MAAAA;MACAA;MAAAA;MACAA;MAAAA;MAeoCA;MAAAA","names":["Observable","i0","TempComponent","constructor","accountService","loginService","ngOnInit","getAccountDataById","subscribe","observer","id","getAccountById","data","account","next","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\morped\\documents\\go-vegan-project\\using-spring-web\\go-vegan-frontend\\src\\app\\components\\temp\\temp.component.ts","C:\\Users\\morped\\documents\\go-vegan-project\\using-spring-web\\go-vegan-frontend\\src\\app\\components\\temp\\temp.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\r\nimport { Account } from '../../common/account';\r\nimport { Order } from '../../common/order';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { LoginService } from '../../services/login.service';\r\n\n@Component({\n  selector: 'app-temp',\n  templateUrl: './temp.component.html',\n  styleUrls: ['./temp.component.css']\n})\nexport class TempComponent implements OnInit {\n\n  account: Account;\n\n  orders: Order[];\n\n  accId: number = 1;\n\n  constructor(private accountService: AccountService, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n\n    this.getAccountDataById().subscribe(() => {\r\n      \r\n    });\r\n  }\n  \n\n  /*\n  ngOnInit(): void {\n    this.getAccountDataById().subscribe(() => {\r\n      this.getOrderDataByAccountId();\r\n    });\r\n  }\n  */\n\n  \n\n  getAccountDataById() {\n\n    // for asynchronous execution of functions\n    return new Observable(observer => {\n\n\n    // for testing, id will always be 1\n    // will alter for dynamic id\n    const id: number = 1;\n\n    this.accountService.getAccountById(id).subscribe(\r\n      data => {\r\n        this.account = data;\r\n        observer.next();\r\n      }\r\n      )\r\n\r\n    });\r\n  }\n\n  \n  //old method\n  /*\n  getAccountDataById() {\n\n    // for testing, id will always be 1\n    // will alter for dynamic id\n    const id: number = 1;\n\n    this.accountService.getAccountById(id).subscribe(\r\n      data => {\r\n        this.account = data;\r\n      }\r\n    )\r\n  }\n  */\n\n  /*\n  getOrderDataByAccountId() {\n\r\n    this.accountService.getOrderByAccountId(this.account.id).subscribe(\r\n      data => {\r\n        this.orders = data;\r\n      }\r\n    )\r\n  }\n  */\n\n}\n","<h3>Account</h3>\r\n\r\n<ul>\r\n  <li>{{account.firstName}}</li>\r\n  <li>{{account.lastName}}</li>\r\n  <li>{{account.email}}</li>\r\n</ul>\r\n\r\n\r\n<p></p>\r\n<table>\r\n  <thead>\r\n    <tr width=\"50%\">\r\n      <th width=\"12.5%\">Order Number</th>\r\n      <th width=\"12.5%\">Total Quantity</th>\r\n      <th width=\"12.5%\">Total Price</th>\r\n      <th width=\"12.5%\"></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr width=\"50%\" *ngFor=\"let tempOrder of orders\">\r\n\r\n      <td width=\"12.5%\">{{tempOrder.id}}<td>\r\n      <td width=\"12.5%\">{{tempOrder.totalQuantity}}</td>\r\n      <td width=\"12.5%\">{{tempOrder.totalPrice}}</td>\r\n      <td routerLink=\"/orderDetails/{{tempOrder.id}}\" width=\"12.5%\">View Order Items</td>\r\n\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module"}