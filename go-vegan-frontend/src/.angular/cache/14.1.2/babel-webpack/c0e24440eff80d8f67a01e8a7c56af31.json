{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/account.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction TempComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tempOrder_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempOrder_r1.totalQuantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempOrder_r1.totalPrice);\n  }\n}\n\nexport class TempComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n  }\n\n  ngOnInit() {\n    this.getAccountDataById();\n    this.getOrderDataByAccountId();\n  }\n  /*\r\n  async ngOnInit(): Promise<void> {\r\n    await this.getAccountDataById();\r\n        this.getOrderDataByAccountId();\r\n  }\r\n  */\n\n\n  getAccountDataById() {\n    // for testing, id will always be 1\n    // will alter for dynamic id\n    const id = 1;\n    this.accountService.getAccountById(id).subscribe(data => {\n      this.account = data;\n    });\n  }\n\n  getOrderDataByAccountId() {\n    this.accountService.getOrderByAccountId(this.account.id).subscribe(data => {\n      this.orders = data;\n    });\n  }\n\n}\n\nTempComponent.ɵfac = function TempComponent_Factory(t) {\n  return new (t || TempComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n};\n\nTempComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TempComponent,\n  selectors: [[\"app-temp\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function TempComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\")(3, \"li\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"li\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"li\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"p\");\n      i0.ɵɵtemplate(10, TempComponent_div_10_Template, 5, 2, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.account.firstName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.account.lastName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.account.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZW1wLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IASAA,4BAAsC,CAAtC,EAAsC,GAAtC;IACKA;IAA2BA;IAC9BA;IAAGA;IAAwBA;;;;;IADxBA;IAAAA;IACAA;IAAAA;;;;ACDL,OAAM,MAAOC,aAAP,CAAoB;EAMxBC,YAAoBC,cAApB,EAAkD;IAA9B;EAAmC;;EAGvDC,QAAQ;IACN,KAAKC,kBAAL;IAEA,KAAKC,uBAAL;EACD;EAGD;;;;;;;;EAQAD,kBAAkB;IAEhB;IACA;IACA,MAAME,EAAE,GAAW,CAAnB;IAEA,KAAKJ,cAAL,CAAoBK,cAApB,CAAmCD,EAAnC,EAAuCE,SAAvC,CACEC,IAAI,IAAG;MACL,KAAKC,OAAL,GAAeD,IAAf;IACD,CAHH;EAKD;;EAEDJ,uBAAuB;IAErB,KAAKH,cAAL,CAAoBS,mBAApB,CAAwC,KAAKD,OAAL,CAAaJ,EAArD,EAAyDE,SAAzD,CACEC,IAAI,IAAG;MACL,KAAKG,MAAL,GAAcH,IAAd;IACD,CAHH;EAKD;;AA5CuB;;;mBAAbT,eAAaD;AAAA;;;QAAbC;EAAaa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1BlB;MAAIA;MAAOA;MACXA,2BAAI,CAAJ,EAAI,IAAJ;MACMA;MAAqBA;MACzBA;MAAIA;MAAoBA;MACxBA;MAAIA;MAAiBA;MAGvBA;MAEAA;;;;MAPMA;MAAAA;MACAA;MAAAA;MACAA;MAAAA;MAKqBA;MAAAA","names":["i0","TempComponent","constructor","accountService","ngOnInit","getAccountDataById","getOrderDataByAccountId","id","getAccountById","subscribe","data","account","getOrderByAccountId","orders","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\morped\\documents\\go-vegan-project\\using-spring-rest-repo\\go-vegan\\go-vegan-frontend\\src\\app\\components\\temp\\temp.component.html","C:\\Users\\morped\\documents\\go-vegan-project\\using-spring-rest-repo\\go-vegan\\go-vegan-frontend\\src\\app\\components\\temp\\temp.component.ts"],"sourcesContent":["<h3>Account</h3>\r\n<ul>\r\n  <li>{{account.firstName}}</li>\r\n  <li>{{account.lastName}}</li>\r\n  <li>{{account.email}}</li>\r\n</ul>\r\n\r\n<p></p>\r\n\r\n<div *ngFor=\"let tempOrder of orders\">\r\n  <a>{{tempOrder.totalQuantity}}</a>\r\n  <a>{{tempOrder.totalPrice}}</a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Account } from '../../common/account';\r\nimport { Order } from '../../common/order';\r\nimport { AccountService } from '../../services/account.service';\r\n\n@Component({\n  selector: 'app-temp',\n  templateUrl: './temp.component.html',\n  styleUrls: ['./temp.component.css']\n})\nexport class TempComponent implements OnInit {\n\n  account: Account;\n\n  orders: Order[];\n\n  constructor(private accountService: AccountService) { }\n\n  \n  ngOnInit(): void {\n    this.getAccountDataById();\n\n    this.getOrderDataByAccountId();\n  }\n  \n\n  /*\n  async ngOnInit(): Promise<void> {\n    await this.getAccountDataById();\n\n    this.getOrderDataByAccountId();\n  }\n  */\n\n  getAccountDataById() {\n\n    // for testing, id will always be 1\n    // will alter for dynamic id\n    const id: number = 1;\n\n    this.accountService.getAccountById(id).subscribe(\r\n      data => {\r\n        this.account = data;\r\n      }\r\n    )\r\n  }\n\n  getOrderDataByAccountId() {\n\r\n    this.accountService.getOrderByAccountId(this.account.id).subscribe(\r\n      data => {\r\n        this.orders = data;\r\n      }\r\n    )\r\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}